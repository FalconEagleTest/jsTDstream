name: Build Portable Binaries

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      description:
        description: 'Release description'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - target: android-arm64
            os: android64
            pkg_target: node16-android-arm64
            arch: arm64-v8a
            triple: aarch64-linux-android
          - target: android-arm
            os: android32
            pkg_target: node16-android-arm
            arch: armeabi-v7a
            triple: armv7a-linux-androideabi

    steps:
    - uses: actions/checkout@v4
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16

    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        add-to-path: false

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          python3 \
          cmake

    - name: Setup Android environment
      run: |
        echo "ANDROID_NDK_HOME=${ANDROID_NDK_LATEST_HOME}" >> $GITHUB_ENV
        
        # Add NDK tools to PATH
        TOOLCHAIN="${ANDROID_NDK_LATEST_HOME}/toolchains/llvm/prebuilt/linux-x86_64"
        echo "TOOLCHAIN=${TOOLCHAIN}" >> $GITHUB_ENV
        echo "${TOOLCHAIN}/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        # Create binding.gyp first
        echo '{
          "targets": [{
            "target_name": "telegram-file-server",
            "sources": [],
            "include_dirs": [
              "<!@(node -p \"require('"'"'node-addon-api'"'"').include\")"
            ],
            "dependencies": [
              "<!(node -p \"require('"'"'node-addon-api'"'"').gyp\")"
            ],
            "cflags!": ["-fno-exceptions"],
            "cflags_cc!": ["-fno-exceptions"],
            "defines": ["NAPI_DISABLE_CPP_EXCEPTIONS"]
          }]
        }' > binding.gyp
        
        # Install dependencies
        npm install --save node-addon-api
        npm install
        npm install --save-dev pkg

    - name: Configure for Android build
      run: |
        API_LEVEL=21
        TRIPLE="${{ matrix.triple }}"
        
        # Setup environment for node-gyp
        echo "CC=${TOOLCHAIN}/bin/${TRIPLE}${API_LEVEL}-clang" >> $GITHUB_ENV
        echo "CXX=${TOOLCHAIN}/bin/${TRIPLE}${API_LEVEL}-clang++" >> $GITHUB_ENV
        echo "LINK=${TOOLCHAIN}/bin/${TRIPLE}${API_LEVEL}-clang++" >> $GITHUB_ENV
        echo "AR=${TOOLCHAIN}/bin/llvm-ar" >> $GITHUB_ENV
        echo "RANLIB=${TOOLCHAIN}/bin/llvm-ranlib" >> $GITHUB_ENV
        echo "STRIP=${TOOLCHAIN}/bin/llvm-strip" >> $GITHUB_ENV

    - name: Create pkg config
      run: |
        node -e "
          const fs = require('fs');
          const pkg = require('./package.json');
          
          pkg.bin = 'src/index.js';
          pkg.pkg = {
            assets: [
              'src/**/*',
              'config/**/*',
              'node_modules/**/*'
            ],
            targets: [ '${{ matrix.pkg_target }}' ]
          };
          
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2));
        "

    - name: Build Binary
      run: |
        npx pkg . \
          --target ${{ matrix.pkg_target }} \
          --output telegram-file-server-${{ matrix.os }} \
          --public \
          --no-bytecode \
          --no-native-build
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: telegram-file-server-${{ matrix.os }}*
        tag_name: v${{ inputs.version }}-${{ matrix.os }}-${{ steps.date.outputs.date }}
        name: Telegram File Server ${{ matrix.os }} v${{ inputs.version }}
        body: |
          Version: ${{ inputs.version }}
          Platform: ${{ matrix.os }}
          Architecture: ${{ matrix.arch }}
          Build Date: ${{ steps.date.outputs.date }}
          
          ${{ inputs.description }}
          
          ### Notes
          - This build requires root access on Android
          - Minimum Android API level: 21
          - Built with NDK r25c
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: telegram-file-server-${{ matrix.os }}
        path: telegram-file-server-${{ matrix.os }}*
        compression-level: 0
