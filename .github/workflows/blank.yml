name: Build Portable Binaries

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      description:
        description: 'Release description'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - target: win-x64
            os: windows64
            pkg_target: node16-win-x64
          - target: android-arm64
            os: android64
            pkg_target: node16-android-arm64
          - target: android-arm
            os: android32
            pkg_target: node16-android-arm

    steps:
    - uses: actions/checkout@v4
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 16

    - name: Setup Android NDK
      if: contains(matrix.target, 'android')
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        local-cache: true

    - name: Setup pkg
      run: |
        npm install -g pkg
        npm install -g node-gyp
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Prepare pkg config
      run: |
        echo '{
          "pkg": {
            "assets": [
              "src/**/*",
              "config/**/*",
              "node_modules/**/*"
            ],
            "targets": [ "${{ matrix.pkg_target }}" ],
            "outputPath": "dist"
          }
        }' > package.json

    - name: Build Windows Binary
      if: contains(matrix.target, 'win')
      run: |
        pkg . --target ${{ matrix.pkg_target }} --output telegram-file-server-${{ matrix.os }}
      env:
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++

    - name: Build Android Binary
      if: contains(matrix.target, 'android')
      run: |
        export ANDROID_NDK_HOME="${ANDROID_NDK_LATEST_HOME}"
        export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
        
        # Configure node-gyp for Android
        node-gyp configure \
          --target_platform=android \
          --target_arch=${{ contains(matrix.target, 'arm64') && 'arm64' || 'arm' }} \
          --target_api=21
        
        # Build the project
        pkg . --target ${{ matrix.pkg_target }} --output telegram-file-server-${{ matrix.os }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: telegram-file-server-${{ matrix.os }}*
        tag_name: v${{ inputs.version }}-${{ matrix.os }}-${{ steps.date.outputs.date }}
        name: Telegram File Server ${{ matrix.os }} v${{ inputs.version }}
        body: |
          Version: ${{ inputs.version }}
          Platform: ${{ matrix.os }}
          Build Date: ${{ steps.date.outputs.date }}
          
          ${{ inputs.description }}
          
          ### Notes
          - Windows 64-bit build includes both command line and GUI support
          - Android builds require root access to run
          - All builds include native dependencies for Telegram client
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: telegram-file-server-${{ matrix.os }}
        path: telegram-file-server-${{ matrix.os }}*
        compression-level: 0
